from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler


async def recommend_electives(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    bg = context.user_data.get("background", {})
    courses = context.user_data.get("courses", [])

    # –§–∏–ª—å—Ç—Ä—É–µ–º —ç–ª–µ–∫—Ç–∏–≤–Ω—ã–µ –∫—É—Ä—Å—ã
    electives = [c for c in courses if c.get("type", "").lower() == "—ç–ª–µ–∫—Ç–∏–≤"]
    if not electives:
        await update.message.reply_text("–ù–µ –Ω–∞—à—ë–ª —ç–ª–µ–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.")
        return ConversationHandler.END

    # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –±–µ—Ä—ë–º –ø–µ—Ä–≤—ã–µ 3 —ç–ª–µ–∫—Ç–∏–≤–∞
    recs = electives[:3]
    lines = [f"- {c['name']} (—Å–µ–º–µ—Å—Ç—Ä {c['semester']})" for c in recs]
    text = "–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ —ç–ª–µ–∫—Ç–∏–≤—ã:\n" + "\n".join(lines)

    await update.message.reply_text(text)
    await update.message.reply_text("–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –µ—â—ë —á—Ç–æ-—Ç–æ ‚Äî –ø–∏—à–∏! üéì")
    return ConversationHandler.END
